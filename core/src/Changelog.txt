0.1_0

-- RuloSp --
Arreglado el problema del fondo
Arreglabo boss (esta vez si)
Hecho sacho giratorio
-------------

 0.1_1

-- 100vol --
Añadidas estrellas en forma de partículas
Añadida barra de carga con ShapeRenderer
Añadida pantalla de selección de niveles.
Añadido gestor de niveles.
Etc.
-------------

0.1_2
-- Naitprauler && RuloSp --
Arreglado "parcialmente" el sacho, con unas ecuaciones de la virgen santísima.

---------------------------

-- 100vol --
Añadida la linea bosses.clear() en la función clearAll() de GameEngine
    (motivo por el cual el boss se quedaba en el juego tras salir/perder y entrar a otro nivel).
------------

0.1_3
Añadido el método setScale(float scaleX, float scaleY) a la clase Text(), el cual permite que el
    texto se escale a los valores que se le pasen, siendo 1 el valor por defecto.
Escalados unos cuantos textos, contador de fps reducido en tamaño, redondeado a dos decimales
    y colocado debajo de la score.
Cambiado el color de la score a verde.

---------------------------

0.1_4
Cambiado sistema de carga de Sprites
    - Sistema actual requiere un ID unico para cada sprite cargado.
    - Mejora del sistema actual posible.
    - Aparenta una mejora de velocidad de carga.
Cambiado sistema de acceso a Sprites.
Cambiado la mayoria de GameEngine.batch.draw() por Sprite.draw()

-- RuLoSp --

0.1_5
-- 100vol --
Implementado comportamiento de EvadingEnemy.
Añadida una enum en la clase Enemy con los comportamientos de todos los enemigos.
    Modificados métodos de spawn para que funcionen con ello.
Abstraido el move() de todos los objetos salvo SatelliteOrbitEnemy a la clase Enemy.
    El rebote con los bordes de la pantalla se controla con dos booleans canReboundX y canREboundY.
Ahora CoreOrbetEnemy se encarga de spawnear su SatelliteOrbitEnemy el solo, y ademas dispone de un
    array para alcenar uno o varios.
------------

0.1_6
-- RuLoSp --
Reducido codigo necesario para inicializar animacion.
------------

0.1_6_1
-- RuLoSp --
Arreglado los satelites cuando hay mas de 1 enemigo de ese tipo en pantalla.
------------

0.1_7
-- 100vol --
Añadida oleada a Level0.
Ahora cuando EvadingEnemy esquiva, su vSpeed es -150.
Limpiados métodos action de los enemigos.
Añadida mecánica de AnimationAdapter a los enemigos.
------------
0.1_7_2
-- 100vol --
Corregido error por el cual no se animaba el enemigo de introduction (pasarle un frameDuration de 0).
Ahora, al acabar la partida, en Scr_GameOver se muestra el número de enemigos que salieron, y el
    número de enemigos que fueron destruidos, estos datos se obtienen del propio Level. Podrían ser útiles para dar
    estrellas al resultado de un nivel, por ejemplo.
        - Cada vez que muere un enemigo muere (kill()), se aumenta el total en el currentLevel del levelManager
        - Cada vez que se llama al método spawnEnemy() de GameEngine se incrementa el número de enemigos
            spawneados (en el levelMAnager), pero solo con ese método, gracias a eso, los enemigos aparecidos desde un
            addEntity o a pelo (como el SatelliteOrbitEnemy por ejemplo), no contarán como un enemigo más,
            en el método kill() de Enemy se comprueba que el enemigo de un score > 0 para que se
            tenga en cuenta o no. Los spikeBallEnemy que saca el boss van a través de spawnEnemy,
            así que no hay problema con ellos.
------------

0.1_8
-- 100vol --
Modificado SatelliteOrbitEnemy, ahora se puede controlar la velocidad de rotación y la distancia
    con el padre mediante 2 variables (rotationSpeed y distanceWithParent). Ahora el parent es de
    Ship, no Enemy, posibilitando así el spawn de satélites al rededor del Player.
------------

0.1_8_0_1
--Xamon--
Creada clase AlambradaEnemy, creados los tipos correspondientes en GameEngine, Behavior, etc... no debería causar problemas
También añadí la extensión .txt a Idead
------------

0.1_9
-- 100vol --
Añadido enemigo ShieldEnemy(por fin), enemigo que cada cierto tiempo se quita/pone un escudo que lo hace inmune.
Cambiada mecánica en la clase Level, ya no hace falta bossPhase, si por ejemplo tenemos 12 fases
    y la última es la del boss, poniendo nPhases=11, lanzará fases entre 0 y 10 y pondrá como
    bossPhase la 11 (12ª en lenguaje humano xD).
Actualizado enlace a anabol.
------------

0.1_9_2
-- 100vol --
Movido ShieldEnemy a Enemys (estaba en bosses) y añadida variable shieldInterval para controlar el intervalo con/sin escudo del enemigo.
Actualizado enlace a anabol por una serie de problemas.
------------

0.1_9_3
-- 100vol && Lurtz --
Arreglado ShieldEnemy para que su escudo respete la pausa.
Introducidas tres estrellas de puntuación en Scr_GameOver, se calculan en función de los enemigos spawneados
    y destruidos. Tuvimos que usar PlanAnimation porque con Image se pasa una referencia del Sprite y
    no se pueden repetir.
Añadido LevelDie para palmar rápido y testear el game over.
---------------------

0.1_9_3
-- RuLoSp --
Purgado MyGdxGame, Loader. GameEngine en proceso.
---------------------

0.2 (2 porque al fin tiene datos!!(y porque llegamos a 1.9))
-- 100vol --
Añadidos datos a la aplicación (por fin) en forma de TreeMap serializado.
    Se gestionan a través de la clase GameDAta de forma estática (se revisará).
Ahora la pantalla GameOver se llama GameEnd y se comporta diferente en función de si se gana
    o se pierde (se le pasa un boolean en el contructor). La pantalla muestra tu puntuación y la
    más alta en ese nivel.
Añadidos gamestate GAME_END_WIN, GAME_WIN_LOSE para controlar lo anterior.
Ahora, cuando se derrota al Boss1, Level0 lanza un trigger para lanzar la pantalla de victoria.
btn_LevelSelection ahora, de haber highscore registrad para el nivel, la muestra.
AVISO IMPORTANTE!!
Para que funcionen los datos, en las assets debe estar creado un fichero "data/levels.ser". Ya que
da erro al intentar crear un fichero en el almacenamiento interno.
Assets actualizadas.
La clase GameData se inicializa en MyGdxGame por el momento.
------------

0.2_1
-- 100vol --
Movidos los datos del juego al almacenamiento externo (concretamente a /storage/sdcard/angry_berto/data
    en android y C:/Users/tuUsuario/angry_berto_data en windows) Con lo cual, los datos ya funcionan
    en android.
Arreglado error por el cual, el btn_Exit no desaparecía al despausar el juego.
Ahora, cuando se derrota al boss, se pierde el control sobre la pantalla, el Player se va hacia delante y,
    finalmente, se completa el nivel.
------------

0.2_2
-- 100vol --
Añadido botón de salir a la pantalla de selección de nivel. El botón de salir en gameplay ahora devuelve
    a la selección de nivel.

0.2_3
-- RuLoSp --
Añadida mecanica de que se mueva al centro de la pantalla mientras se mueve hacia arriba el jugador
    tras derrotar un boss.
------------

0.2_4
-- RuLoSp --
- Purgado : [Botones, Sprites.java, Loader.java]
- Sacado el Enum a un fichero (y renombrado) de SprPaths a SprNames
- Cambiado el acceso al nombre de los sprites usando el Enum.
- Pillado el mas descriptivo de los 2 siguientes:
    - Renombrado algunas clases para que coincidan con su correspondiente en valor sprite
    - Renombrado algun nombre de sprite en SprNames para que coincida con su nombre de clase
------------

0.2_5
-- RuLoSp --
- Purgado TOD0 lo que quedaba
------------

0.2_6
-- Xamon (100vol) --
Añadido BarbedWireEnemy, de parte de Xamon.
Actualizadas assets con sprite provisional, el enemigo se puede ver enm Level Test.

0.2_7
-- Xamon (100vol) --
Corregido que los disparos del Player impactasen en BarbedWireEnemy.
Añadido boolean isTranscendental en la clase Enemy, si se pone a true los disparos del Player no
    atravesarán al enemigo.

0.2_7_2
-- 100vol --
Arreglado completamente el disparo de HeavyEnemy, he dividido en dos sonidos la carga y el tiro en
    si el problema es que he tenido que crear y tratar heavyEnemyChargeSound como Music para poder
    preguntar isPlaying() (Sound no tiene tal método) y lanzar el disparo junto con el segundo sonido.

0.2_7_3
Actualizado sprite de BarbedWireEnemy.
Ahora el disparo de HeavyEnemy se detiene si éste muere.






