0.1_0

-- RuloSp --
Arreglado el problema del fondo
Arreglabo boss (esta vez si)
Hecho sacho giratorio
-------------

 0.1_1

-- 100vol --
Añadidas estrellas en forma de partículas
Añadida barra de carga con ShapeRenderer
Añadida pantalla de selección de niveles.
Añadido gestor de niveles.
Etc.
-------------

0.1_2
-- Naitprauler && RuloSp --
Arreglado "parcialmente" el sacho, con unas ecuaciones de la virgen santísima.

---------------------------

-- 100vol --
Añadida la linea bosses.clear() en la función clearAll() de GameEngine
    (motivo por el cual el boss se quedaba en el juego tras salir/perder y entrar a otro nivel).
------------

0.1_3
Añadido el método setScale(float scaleX, float scaleY) a la clase Text(), el cual permite que el
    texto se escale a los valores que se le pasen, siendo 1 el valor por defecto.
Escalados unos cuantos textos, contador de fps reducido en tamaño, redondeado a dos decimales
    y colocado debajo de la score.
Cambiado el color de la score a verde.

---------------------------

0.1_4
Cambiado sistema de carga de Sprites
    - Sistema actual requiere un ID unico para cada sprite cargado.
    - Mejora del sistema actual posible.
    - Aparenta una mejora de velocidad de carga.
Cambiado sistema de acceso a Sprites.
Cambiado la mayoria de GameEngine.batch.draw() por Sprite.draw()

-- RuLoSp --

0.1_5
-- 100vol --
Implementado comportamiento de EvadingEnemy.
Añadida una enum en la clase Enemy con los comportamientos de todos los enemigos.
    Modificados métodos de spawn para que funcionen con ello.
Abstraido el move() de todos los objetos salvo SatelliteOrbitEnemy a la clase Enemy.
    El rebote con los bordes de la pantalla se controla con dos booleans canReboundX y canREboundY.
Ahora CoreOrbetEnemy se encarga de spawnear su SatelliteOrbitEnemy el solo, y ademas dispone de un
    array para alcenar uno o varios.
------------

0.1_6
-- RuLoSp --
Reducido codigo necesario para inicializar animacion.
------------

0.1_6_1
-- RuLoSp --
Arreglado los satelites cuando hay mas de 1 enemigo de ese tipo en pantalla.
------------

0.1_7
-- 100vol --
Añadida oleada a Level0.
Ahora cuando EvadingEnemy esquiva, su vSpeed es -150.
Limpiados métodos action de los enemigos.
Añadida mecánica de AnimationAdapter a los enemigos.
------------
0.1_7_2
-- 100vol --
Corregido error por el cual no se animaba el enemigo de introduction (pasarle un frameDuration de 0).
Ahora, al acabar la partida, en Scr_GameOver se muestra el número de enemigos que salieron, y el
    número de enemigos que fueron destruidos, estos datos se obtienen del propio Level. Podrían ser útiles para dar
    estrellas al resultado de un nivel, por ejemplo.
        - Cada vez que muere un enemigo muere (kill()), se aumenta el total en el currentLevel del levelManager
        - Cada vez que se llama al método spawnEnemy() de GameEngine se incrementa el número de enemigos
            spawneados (en el levelMAnager), pero solo con ese método, gracias a eso, los enemigos aparecidos desde un
            addEntity o a pelo (como el SatelliteOrbitEnemy por ejemplo), no contarán como un enemigo más,
            en el método kill() de Enemy se comprueba que el enemigo de un score > 0 para que se
            tenga en cuenta o no. Los spikeBallEnemy que saca el boss van a través de spawnEnemy,
            así que no hay problema con ellos.
------------
0.1_8
-- 100vol --
Modificado SatelliteOrbitEnemy, ahora se puede controlar la velocidad de rotación y la distancia
    con el padre mediante 2 variables (rotationSpeed y distanceWithParent). Ahora el parent es de
    Ship, no Enemy, posibilitando así el spawn de satélites al rededor del Player.
------------
0.1_8_0_1
--Xamon--
Creada clase AlambradaEnemy, creados los tipos correspondientes en GameEngine, Behavior, etc... no debería causar problemas
También añadí la extensión .txt a Idead
------------